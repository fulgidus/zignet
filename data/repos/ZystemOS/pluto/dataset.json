[
  {
    "instruction": "Write a Zig function similar to build from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: build.zig",
    "response": "pub fn build(b: *Builder) !void {\n    const target = b.standardTargetOptions(.{ .whitelist = &[_]CrossTarget{x86_i686}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "build.zig",
      "type": "function",
      "name": "build",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to create from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: build.zig",
    "response": "pub fn create(builder: *Builder, options: Fat32.Options, out_file_path: []const u8) *Fat32BuilderStep {\n        const fat32_builder_step = builder.allocator.create(Fat32BuilderStep) catch unreachable;\n        fat32_builder_step.* = .{\n            .step = Step.init(.custom, builder.fmt(\"Fat32BuilderStep\", .{}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "build.zig",
      "type": "function",
      "name": "create",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to writeRamdisk from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: build.zig",
    "response": "fn writeRamdisk(comptime Usize: type, self: *RamdiskStep) Error!void {\n        // 1GB, don't think the ram disk should be very big\n        const max_file_size = 1024 * 1024 * 1024;\n\n        // Open the out file\n        var ramdisk = try fs.cwd().createFile(self.out_file_path, .{}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "build.zig",
      "type": "function",
      "name": "writeRamdisk",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to make from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: build.zig",
    "response": "fn make(step: *Step) Error!void {\n        const self = @fieldParentPtr(RamdiskStep, \"step\", step);\n        switch (self.target.getCpuArch()) {\n            .i386 => try writeRamdisk(u32, self),\n            else => unreachable,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "build.zig",
      "type": "function",
      "name": "make",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to create from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: build.zig",
    "response": "pub fn create(builder: *Builder, target: CrossTarget, files: []const []const u8, out_file_path: []const u8) *RamdiskStep {\n        const ramdisk_step = builder.allocator.create(RamdiskStep) catch unreachable;\n        ramdisk_step.* = .{\n            .step = Step.init(.custom, builder.fmt(\"Ramdisk\", .{}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "build.zig",
      "type": "function",
      "name": "create",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig struct similar to Fat32BuilderStep from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: build.zig",
    "response": "const Fat32BuilderStep = struct {\n    /// The Step, that is all you need to know\n    step: Step,\n\n    /// The builder pointer, also all you need to know\n    builder: *Builder,\n\n    /// The path to where the ramdisk will be written to.\n    out_file_path: []const u8,\n\n    /// Options for creating the FAT32 image.\n    options: Fat32.Options,\n\n    ///\n    /// The make function that is called by the builder.\n    ///\n    /// Arguments:\n    ///     IN step: *Step - The step of this step.\n    ///\n    /// Error: error{EndOfStream}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "build.zig",
      "type": "struct",
      "name": "Fat32BuilderStep",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig struct similar to RamdiskStep from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: build.zig",
    "response": "const RamdiskStep = struct {\n    /// The Step, that is all you need to know\n    step: Step,\n\n    /// The builder pointer, also all you need to know\n    builder: *Builder,\n\n    /// The target for the build\n    target: CrossTarget,\n\n    /// The list of files to be added to the ramdisk\n    files: []const []const u8,\n\n    /// The path to where the ramdisk will be written to.\n    out_file_path: []const u8,\n\n    /// The possible errors for creating a ramdisk\n    const Error = (error{EndOfStream}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "build.zig",
      "type": "struct",
      "name": "RamdiskStep",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to ErrorSet from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn ErrorSet(comptime StreamType: type) type {\n        const WriteError = switch (@typeInfo(StreamType)) {\n            .Pointer => |p| p.child.WriteError,\n            else => StreamType.WriteError,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "ErrorSet",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to getReservedSectors from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn getReservedSectors() u16 {\n        return 32;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "getReservedSectors",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getDefaultSectorSize from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn getDefaultSectorSize() u16 {\n        // TODO: Look into if this could be different for different scenarios\n        return 512;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "getDefaultSectorSize",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getDefaultSectorsPerCluster from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn getDefaultSectorsPerCluster(image_size: u64, bytes_per_sector: u16) Error!u8 {\n        // A couple of constants to help\n        const KB = 1024;\n        const MB = 1024 * KB;\n        const GB = 1024 * MB;\n        const TB = 1024 * GB;\n\n        return switch (image_size) {\n            0...35 * 512 - 1 => Error.TooSmall,\n            35 * 512...64 * MB - 1 => @intCast(u8, std.math.max(512, bytes_per_sector) / bytes_per_sector),\n            64 * MB...128 * MB - 1 => @intCast(u8, std.math.max(1024, bytes_per_sector) / bytes_per_sector),\n            128 * MB...256 * MB - 1 => @intCast(u8, std.math.max(2048, bytes_per_sector) / bytes_per_sector),\n            256 * MB...8 * GB - 1 => @intCast(u8, std.math.max(4096, bytes_per_sector) / bytes_per_sector),\n            8 * GB...16 * GB - 1 => @intCast(u8, std.math.max(8192, bytes_per_sector) / bytes_per_sector),\n            16 * GB...32 * GB - 1 => @intCast(u8, std.math.max(16384, bytes_per_sector) / bytes_per_sector),\n            32 * GB...2 * TB - 1 => @intCast(u8, std.math.max(32768, bytes_per_sector) / bytes_per_sector),\n            else => Error.TooLarge,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "getDefaultSectorsPerCluster",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getDefaultVolumeName from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn getDefaultVolumeName() [11]u8 {\n        return \"NO NAME    \".*;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "getDefaultVolumeName",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getDefaultImageSize from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn getDefaultImageSize() u32 {\n        // The 513*2 was pre calculated\n        return (0xFFF5 + 1026 + @as(u32, getReservedSectors())) * @as(u32, getDefaultSectorSize());\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "getDefaultImageSize",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to createSerialNumber from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn createSerialNumber() u32 {\n        // TODO: Get the actual date. Currently there is no std lib for human readable date.\n        const year = 2020;\n        const month = 09;\n        const day = 27;\n        const hour = 13;\n        const minute = 46;\n        const second = 53;\n        const millisecond_10 = 54;\n\n        const p1 = (@as(u16, month) << 8) | day;\n        const p2 = (@as(u16, second) << 8) | millisecond_10;\n        const p3 = (@as(u16, hour) << 8) | minute;\n\n        const p4 = p1 + p2;\n        const p5 = p3 + year;\n\n        return (@as(u32, p4) << 16) + p5;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "createSerialNumber",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to writeFSInfo from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn writeFSInfo(stream: anytype, fat32_header: Header, free_cluster_num: u32, next_free_cluster: u32) ErrorSet(@TypeOf(stream))!void {\n        const seekable_stream = stream.seekableStream();\n        const writer = stream.writer();\n\n        // Seek to the correct location\n        try seekable_stream.seekTo(fat32_header.fsinfo_sector * fat32_header.bytes_per_sector);\n\n        // First signature\n        try writer.writeIntLittle(u32, 0x41615252);\n\n        // These next bytes are reserved and unused\n        try seekable_stream.seekBy(480);\n\n        // Second signature\n        try writer.writeIntLittle(u32, 0x61417272);\n\n        // Last know free cluster count\n        try writer.writeIntLittle(u32, free_cluster_num);\n\n        // Cluster number to start looking for available clusters\n        try writer.writeIntLittle(u32, next_free_cluster);\n\n        // These next bytes are reserved and unused\n        try seekable_stream.seekBy(12);\n\n        // Trail signature\n        try writer.writeIntLittle(u32, 0xAA550000);\n\n        // Repeat again for the backup\n        try seekable_stream.seekTo((fat32_header.backup_boot_sector + fat32_header.fsinfo_sector) * fat32_header.bytes_per_sector);\n        try writer.writeIntLittle(u32, 0x41615252);\n        try seekable_stream.seekBy(480);\n        try writer.writeIntLittle(u32, 0x61417272);\n        try writer.writeIntLittle(u32, free_cluster_num);\n        try writer.writeIntLittle(u32, next_free_cluster);\n        try seekable_stream.seekBy(12);\n        try writer.writeIntLittle(u32, 0xAA550000);\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "writeFSInfo",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to writeFAT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn writeFAT(stream: anytype, fat32_header: Header) ErrorSet(@TypeOf(stream))!void {\n        const seekable_stream = stream.seekableStream();\n        const writer = stream.writer();\n\n        // This FAT is below the reserved sectors\n        try seekable_stream.seekTo(fat32_header.reserved_sectors * fat32_header.bytes_per_sector);\n\n        // Last byte is the same as the media descriptor, the rest are 1's.\n        try writer.writeIntLittle(u32, 0xFFFFFF00 | @as(u32, fat32_header.media_descriptor_type));\n\n        // End of chain indicator. This can be 0x0FFFFFF8 - 0x0FFFFFFF, but 0x0FFFFFFF is better supported.\n        try writer.writeIntLittle(u32, 0x0FFFFFFF);\n\n        // Root director cluster, 0x0FFFFFFF = initially only one cluster for root directory\n        try writer.writeIntLittle(u32, 0x0FFFFFFF);\n\n        // Write the second FAT, same as the first\n        try seekable_stream.seekTo(fat32_header.reserved_sectors * fat32_header.bytes_per_sector + (fat32_header.sectors_per_fat * fat32_header.bytes_per_sector));\n        try writer.writeIntLittle(u32, 0xFFFFFF00 | @as(u32, fat32_header.media_descriptor_type));\n        try writer.writeIntLittle(u32, 0x0FFFFFFF);\n        try writer.writeIntLittle(u32, 0x0FFFFFFF);\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "writeFAT",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to writeBootSector from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn writeBootSector(stream: anytype, fat32_header: Header) ErrorSet(@TypeOf(stream))!void {\n        const seekable_stream = stream.seekableStream();\n        const writer = stream.writer();\n\n        var boot_sector: [512]u8 = undefined;\n        std.mem.copy(u8, &boot_sector, &bootsector_boot_code);\n\n        // Write the header into the boot sector variable\n        var fat32_header_stream = std.io.fixedBufferStream(boot_sector[3..90]);\n        inline for (std.meta.fields(Header)) |item| {\n            switch (@typeInfo(item.field_type)) {\n                .Array => |info| switch (info.child) {\n                    u8 => try fat32_header_stream.writer().writeAll(&@field(fat32_header, item.name)),\n                    else => @compileError(\"Unexpected field type: \" ++ @typeName(info.child)),\n                }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "writeBootSector",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to createFATHeader from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn createFATHeader(options: Options) Error!Header {\n        // 512 is the smallest sector size for FAT32\n        if (options.sector_size < 512 or options.sector_size > 4096 or options.sector_size % 512 != 0) {\n            log.err(\"Bytes per sector is invalid. Must be greater then 512 and a multiple of 512. Found: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "createFATHeader",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to clearStream from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "fn clearStream(stream: anytype, size: usize) ErrorSet(@TypeOf(stream))!void {\n        const buff_size = 4096;\n        const bytes: [buff_size]u8 = [_]u8{0x00}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "clearStream",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to make from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "pub fn make(options: Options, stream: anytype, quick_format: bool) (ErrorSet(@TypeOf(stream)) || Error)!void {\n        // First set up the header\n        const fat32_header = try Fat32.createFATHeader(options);\n\n        // Initialise the stream with all zeros\n        try stream.seekableStream().seekTo(0);\n        if (quick_format) {\n            // Zero just the reserved and FAT sectors\n            try clearStream(stream, (fat32_header.reserved_sectors + (fat32_header.sectors_per_fat * 2)) * fat32_header.bytes_per_sector);\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "function",
      "name": "make",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig struct similar to Options from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "pub const Options = struct {\n        /// The FAT32 image size in bytes. This is not the formatted size.\n        /// The default (recommenced smallest) is 34090496 bytes (~32.5KB). This can be reduced to\n        /// the lowest value of 17920 bytes (17.5KB). This image size is the smallest possible size\n        /// where you can only create files, but not write to them. This image size can be mounted\n        /// in Linux and ZystemOS.\n        image_size: u32 = getDefaultImageSize(),\n\n        /// The sector size in bytes. The minimum value for this is 512, and a maximum of 4096.\n        /// This also must be a multiple of 512. Default 512.\n        sector_size: u16 = getDefaultSectorSize(),\n\n        /// The number of sectors per clusters. A default is chosen depending on the image size and\n        /// sector size. Valid value are: 1, 2, 4, 8, 16, 32, 64 and 128. Default 1.\n        cluster_size: u8 = getDefaultSectorsPerCluster(getDefaultImageSize(), getDefaultSectorSize()) catch unreachable,\n\n        /// The formatted volume name. Volume names shorter than 11 characters must have trailing\n        /// spaces. Default NO MANE.\n        volume_name: [11]u8 = getDefaultVolumeName(),\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "struct",
      "name": "Options",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to bytes from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: mkfat32.zig",
    "response": "const bytes: [buff_size]u8 = [_]u8{0x00} ** buff_size;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "mkfat32.zig",
      "type": "const",
      "name": "bytes",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to empty from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn empty() CpuState {\n        return .{\n            .cr3 = undefined,\n            .gs = undefined,\n            .fs = undefined,\n            .es = undefined,\n            .ds = undefined,\n            .edi = undefined,\n            .esi = undefined,\n            .ebp = undefined,\n            .esp = undefined,\n            .ebx = undefined,\n            .edx = undefined,\n            .ecx = undefined,\n            .eax = undefined,\n            .int_num = undefined,\n            .error_code = undefined,\n            .eip = undefined,\n            .cs = undefined,\n            .eflags = undefined,\n            .user_esp = undefined,\n            .user_ss = undefined,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "empty",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to in from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn in(comptime Type: type, port: u16) Type {\n    return switch (Type) {\n        u8 => asm volatile (\"inb %[port], %[result]\"\n            : [result] \"={al}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "in",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to out from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn out(port: u16, data: anytype) void {\n    switch (@TypeOf(data)) {\n        u8 => asm volatile (\"outb %[data], %[port]\"\n            :\n            : [port] \"{dx}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "out",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to ioWait from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn ioWait() void {\n    out(0x80, @as(u8, 0));\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "ioWait",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to lgdt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn lgdt(gdt_ptr: *const gdt.GdtPtr) void {\n    // Load the GDT into the CPU\n    asm volatile (\"lgdt (%%eax)\"\n        :\n        : [gdt_ptr] \"{eax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "lgdt",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sgdt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn sgdt() gdt.GdtPtr {\n    var gdt_ptr = gdt.GdtPtr{ .limit = 0, .base = 0 }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "sgdt",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to ltr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn ltr(offset: u16) void {\n    asm volatile (\"ltr %%ax\"\n        :\n        : [offset] \"{ax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "ltr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to lidt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn lidt(idt_ptr: *const idt.IdtPtr) void {\n    asm volatile (\"lidt (%%eax)\"\n        :\n        : [idt_ptr] \"{eax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "lidt",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sidt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn sidt() idt.IdtPtr {\n    var idt_ptr = idt.IdtPtr{ .limit = 0, .base = 0 }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "sidt",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to enableInterrupts from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn enableInterrupts() void {\n    asm volatile (\"sti\");\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "enableInterrupts",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to disableInterrupts from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn disableInterrupts() void {\n    asm volatile (\"cli\");\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "disableInterrupts",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to spinWait from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn spinWait() noreturn {\n    enableInterrupts();\n    while (true) {\n        halt();\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "spinWait",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to haltNoInterrupts from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn haltNoInterrupts() noreturn {\n    while (true) {\n        disableInterrupts();\n        halt();\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "haltNoInterrupts",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to writeSerialCom1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "fn writeSerialCom1(byte: u8) void {\n    serial.write(byte, serial.Port.COM1);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "writeSerialCom1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to initSerial from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn initSerial(boot_payload: BootPayload) Serial {\n    // Suppress unused var warning\n    _ = boot_payload;\n    serial.init(serial.DEFAULT_BAUDRATE, serial.Port.COM1) catch |e| {\n        panic(@errorReturnTrace(), \"Failed to initialise serial: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "initSerial",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to initTTY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn initTTY(boot_payload: BootPayload) TTY {\n    // Suppress unused var warning\n    _ = boot_payload;\n    return .{\n        .print = tty.writeString,\n        .setCursor = tty.setCursor,\n        .cols = vga.WIDTH,\n        .rows = vga.HEIGHT,\n        .clear = tty.clearScreen,\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "initTTY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to initMem from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn initMem(mb_info: BootPayload) Allocator.Error!MemProfile {\n    log.info(\"Init\\n\", .{}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "initMem",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to initKeyboard from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn initKeyboard(allocator: Allocator) Allocator.Error!*Keyboard {\n    return keyboard.init(allocator);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "initKeyboard",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getDevices from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn getDevices(allocator: Allocator) Allocator.Error![]Device {\n    return pci.getDevices(allocator);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "getDevices",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getDateTime from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn getDateTime() DateTime {\n    return rtc.getDateTime();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "getDateTime",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to init from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn init(mem_profile: *const MemProfile) void {\n    gdt.init();\n    idt.init();\n\n    pic.init();\n    isr.init();\n    irq.init();\n\n    paging.init(mem_profile);\n\n    pit.init();\n    rtc.init();\n\n    syscalls.init();\n\n    // Initialise the VGA and TTY here since their tests belong the architecture and so should be a part of the\n    // arch init test messages\n    vga.init();\n    tty.init();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "init",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTestCheckUserTaskState from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn runtimeTestCheckUserTaskState(ctx: *const CpuState) bool {\n    return ctx.eax == 0xCAFE and ctx.ebx == 0xBEEF;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "runtimeTestCheckUserTaskState",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTestChecksMem from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub fn runtimeTestChecksMem(the_vmm: *const vmm.VirtualMemoryManager(VmmPayload)) void {\n    var addr = the_vmm.start;\n    while (addr < the_vmm.end and (the_vmm.isSet(addr) catch unreachable)) {\n        addr += vmm.BLOCK_SIZE;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "function",
      "name": "runtimeTestChecksMem",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig const similar to VMM_MAPPER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub const VMM_MAPPER: vmm.Mapper(VmmPayload) = vmm.Mapper(VmmPayload){ .mapFn = paging.map, .unmapFn = paging.unmap };",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "const",
      "name": "VMM_MAPPER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to MEMORY_BLOCK_SIZE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "pub const MEMORY_BLOCK_SIZE: usize = paging.PAGE_SIZE_4KB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "const",
      "name": "MEMORY_BLOCK_SIZE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to end from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/arch.zig",
    "response": "const end: usize = if (entry.addr > std.math.maxInt(usize) - entry.len) std.math.maxInt(usize) else @intCast(usize, entry.addr + entry.len);",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/arch.zig",
      "type": "const",
      "name": "end",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to kmain from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/boot.zig",
    "response": "fn kmain(mb_info: arch.BootPayload) void;\n\nexport fn _start() align(16) linksection(\".text.boot\") callconv(.Naked) noreturn {\n    // Set the page directory to the boot directory\n    asm volatile (\n        \\\\.extern boot_page_directory\n        \\\\mov $boot_page_directory, %%ecx\n        \\\\mov %%ecx, %%cr3\n    );\n\n    // Enable 4 MiB pages\n    asm volatile (\n        \\\\mov %%cr4, %%ecx\n        \\\\or $0x00000010, %%ecx\n        \\\\mov %%ecx, %%cr4\n    );\n\n    // Enable paging\n    asm volatile (\n        \\\\mov %%cr0, %%ecx\n        \\\\or $0x80000000, %%ecx\n        \\\\mov %%ecx, %%cr0\n    );\n    asm volatile (\"jmp start_higher_half\");\n    while (true) {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/boot.zig",
      "type": "function",
      "name": "kmain",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to start_higher_half from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/boot.zig",
    "response": "fn start_higher_half() callconv(.Naked) noreturn {\n    // Invalidate the page for the first 4MiB as it's no longer needed\n    asm volatile (\"invlpg (0)\");\n\n    // Setup the stack\n    asm volatile (\n        \\\\.extern KERNEL_STACK_END\n        \\\\mov $KERNEL_STACK_END, %%esp\n        \\\\sub $32, %%esp\n        \\\\mov %%esp, %%ebp\n    );\n\n    // Get the multiboot header address and add the virtual offset\n    const mb_info_addr = asm (\n        \\\\mov %%ebx, %[res]\n        : [res] \"=r\" (-> usize),\n    ) + @ptrToInt(&KERNEL_ADDR_OFFSET);\n    kmain(@intToPtr(arch.BootPayload, mb_info_addr));\n    while (true) {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/boot.zig",
      "type": "function",
      "name": "start_higher_half",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "pub fn getRegister(reg: StatusRegister) u8 {\n        return switch (reg) {\n            .A => STATUS_REGISTER_A,\n            .B => STATUS_REGISTER_B,\n            .C => STATUS_REGISTER_C,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "getRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "pub fn getRegister(reg: RtcRegister) u8 {\n        return switch (reg) {\n            .SECOND => REGISTER_SECOND,\n            .MINUTE => REGISTER_MINUTE,\n            .HOUR => REGISTER_HOUR,\n            .DAY => REGISTER_DAY,\n            .MONTH => REGISTER_MONTH,\n            .YEAR => REGISTER_YEAR,\n            .CENTURY => REGISTER_CENTURY,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "getRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to selectRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "fn selectRegister(reg: u8, comptime disable_nmi: bool) void {\n    if (disable_nmi) {\n        arch.out(ADDRESS, reg | NMI_BIT);\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "selectRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to writeRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "fn writeRegister(data: u8) void {\n    arch.out(DATA, data);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "writeRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "fn readRegister() u8 {\n    return arch.in(u8, DATA);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "readRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to selectAndReadRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "fn selectAndReadRegister(reg: u8, comptime disable_nmi: bool) u8 {\n    selectRegister(reg, disable_nmi);\n    arch.ioWait();\n    return readRegister();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "selectAndReadRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to selectAndWriteRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "fn selectAndWriteRegister(reg: u8, data: u8, comptime disable_nmi: bool) void {\n    selectRegister(reg, disable_nmi);\n    arch.ioWait();\n    writeRegister(data);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "selectAndWriteRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readRtcRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "pub fn readRtcRegister(reg: RtcRegister) u8 {\n    return selectAndReadRegister(reg.getRegister(), false);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "readRtcRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readStatusRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "pub fn readStatusRegister(reg: StatusRegister, comptime disable_nmi: bool) u8 {\n    return selectAndReadRegister(reg.getRegister(), disable_nmi);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "readStatusRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to writeStatusRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "pub fn writeStatusRegister(reg: StatusRegister, data: u8, comptime disable_nmi: bool) void {\n    selectAndWriteRegister(reg.getRegister(), data, disable_nmi);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "function",
      "name": "writeStatusRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to CURRENT_CENTURY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const CURRENT_CENTURY: u8 = 2000;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "CURRENT_CENTURY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ADDRESS from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const ADDRESS: u16 = 0x70;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "ADDRESS",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DATA from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const DATA: u16 = 0x71;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "DATA",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to REGISTER_SECOND from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const REGISTER_SECOND: u8 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "REGISTER_SECOND",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to REGISTER_MINUTE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const REGISTER_MINUTE: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "REGISTER_MINUTE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to REGISTER_HOUR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const REGISTER_HOUR: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "REGISTER_HOUR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to REGISTER_WEEKDAY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const REGISTER_WEEKDAY: u8 = 0x06;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "REGISTER_WEEKDAY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to REGISTER_DAY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const REGISTER_DAY: u8 = 0x07;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "REGISTER_DAY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to REGISTER_MONTH from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const REGISTER_MONTH: u8 = 0x08;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "REGISTER_MONTH",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to REGISTER_YEAR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const REGISTER_YEAR: u8 = 0x09;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "REGISTER_YEAR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to REGISTER_CENTURY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const REGISTER_CENTURY: u8 = 0x32;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "REGISTER_CENTURY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to STATUS_REGISTER_A from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const STATUS_REGISTER_A: u8 = 0x0A;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "STATUS_REGISTER_A",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to STATUS_REGISTER_B from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const STATUS_REGISTER_B: u8 = 0x0B;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "STATUS_REGISTER_B",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to STATUS_REGISTER_C from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const STATUS_REGISTER_C: u8 = 0x0C;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "STATUS_REGISTER_C",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NMI_BIT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/cmos.zig",
    "response": "const NMI_BIT: u8 = 0x80;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/cmos.zig",
      "type": "const",
      "name": "NMI_BIT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to makeGdtEntry from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "fn makeGdtEntry(base: u32, limit: u20, access: AccessBits, flags: FlagBits) GdtEntry {\n    return .{\n        .limit_low = @truncate(u16, limit),\n        .base_low = @truncate(u24, base),\n        .access = .{\n            .accessed = access.accessed,\n            .read_write = access.read_write,\n            .direction_conforming = access.direction_conforming,\n            .executable = access.executable,\n            .descriptor = access.descriptor,\n            .privilege = access.privilege,\n            .present = access.present,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "function",
      "name": "makeGdtEntry",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to mock_lgdt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "fn mock_lgdt(ptr: *const GdtPtr) void {\n    expectEqual(TABLE_SIZE, ptr.limit) catch panic(null, \"GDT pointer limit was not correct\", .{}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "function",
      "name": "mock_lgdt",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_loadedGDTSuccess from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "fn rt_loadedGDTSuccess() void {\n    const loaded_gdt = arch.sgdt();\n    if (gdt_ptr.limit != loaded_gdt.limit) {\n        panic(@errorReturnTrace(), \"FAILURE: GDT not loaded properly: 0x{X}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "function",
      "name": "rt_loadedGDTSuccess",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "pub fn runtimeTests() void {\n    rt_loadedGDTSuccess();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NUMBER_OF_ENTRIES from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const NUMBER_OF_ENTRIES: u16 = 0x06;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "NUMBER_OF_ENTRIES",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TABLE_SIZE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const TABLE_SIZE: u16 = @sizeOf(GdtEntry) * NUMBER_OF_ENTRIES - 1;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "TABLE_SIZE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NULL_INDEX from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const NULL_INDEX: u16 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "NULL_INDEX",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to KERNEL_CODE_INDEX from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const KERNEL_CODE_INDEX: u16 = 0x01;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "KERNEL_CODE_INDEX",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to KERNEL_DATA_INDEX from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const KERNEL_DATA_INDEX: u16 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "KERNEL_DATA_INDEX",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to USER_CODE_INDEX from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const USER_CODE_INDEX: u16 = 0x03;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "USER_CODE_INDEX",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to USER_DATA_INDEX from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const USER_DATA_INDEX: u16 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "USER_DATA_INDEX",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TSS_INDEX from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const TSS_INDEX: u16 = 0x05;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "TSS_INDEX",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NULL_SEGMENT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const NULL_SEGMENT: AccessBits = AccessBits{\n    .accessed = 0,\n    .read_write = 0,\n    .direction_conforming = 0,\n    .executable = 0,\n    .descriptor = 0,\n    .privilege = 0,\n    .present = 0,\n};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "NULL_SEGMENT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to KERNEL_SEGMENT_CODE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const KERNEL_SEGMENT_CODE: AccessBits = AccessBits{\n    .accessed = 0,\n    .read_write = 1,\n    .direction_conforming = 0,\n    .executable = 1,\n    .descriptor = 1,\n    .privilege = 0,\n    .present = 1,\n};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "KERNEL_SEGMENT_CODE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to KERNEL_SEGMENT_DATA from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const KERNEL_SEGMENT_DATA: AccessBits = AccessBits{\n    .accessed = 0,\n    .read_write = 1,\n    .direction_conforming = 0,\n    .executable = 0,\n    .descriptor = 1,\n    .privilege = 0,\n    .present = 1,\n};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "KERNEL_SEGMENT_DATA",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to USER_SEGMENT_CODE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const USER_SEGMENT_CODE: AccessBits = AccessBits{\n    .accessed = 0,\n    .read_write = 1,\n    .direction_conforming = 0,\n    .executable = 1,\n    .descriptor = 1,\n    .privilege = 3,\n    .present = 1,\n};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "USER_SEGMENT_CODE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to USER_SEGMENT_DATA from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const USER_SEGMENT_DATA: AccessBits = AccessBits{\n    .accessed = 0,\n    .read_write = 1,\n    .direction_conforming = 0,\n    .executable = 0,\n    .descriptor = 1,\n    .privilege = 3,\n    .present = 1,\n};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "USER_SEGMENT_DATA",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TSS_SEGMENT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const TSS_SEGMENT: AccessBits = AccessBits{\n    .accessed = 1,\n    .read_write = 0,\n    .direction_conforming = 0,\n    .executable = 1,\n    .descriptor = 0,\n    .privilege = 0,\n    .present = 1,\n};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "TSS_SEGMENT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NULL_FLAGS from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const NULL_FLAGS: FlagBits = FlagBits{\n    .reserved_zero = 0,\n    .is_64_bit = 0,\n    .is_32_bit = 0,\n    .granularity = 0,\n};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "NULL_FLAGS",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PAGING_32_BIT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const PAGING_32_BIT: FlagBits = FlagBits{\n    .reserved_zero = 0,\n    .is_64_bit = 0,\n    .is_32_bit = 1,\n    .granularity = 1,\n};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "PAGING_32_BIT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NULL_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "pub const NULL_OFFSET: u16 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "NULL_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to KERNEL_CODE_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "pub const KERNEL_CODE_OFFSET: u16 = 0x08;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "KERNEL_CODE_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to KERNEL_DATA_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "pub const KERNEL_DATA_OFFSET: u16 = 0x10;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "KERNEL_DATA_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to USER_CODE_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "pub const USER_CODE_OFFSET: u16 = 0x18;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "USER_CODE_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to USER_DATA_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "pub const USER_DATA_OFFSET: u16 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "USER_DATA_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TSS_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "pub const TSS_OFFSET: u16 = 0x28;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "TSS_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to expected from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const expected: u64 = 0;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "expected",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to expected from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/gdt.zig",
    "response": "const expected: u64 = 0b0101010101010101010101010101010101010101010101010101010101010101;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/gdt.zig",
      "type": "const",
      "name": "expected",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to makeEntry from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "fn makeEntry(base: u32, selector: u16, gate_type: u4, privilege: u2) IdtEntry {\n    return IdtEntry{\n        .base_low = @truncate(u16, base),\n        .selector = selector,\n        .zero = 0,\n        .gate_type = gate_type,\n        .storage_segment = 0,\n        .privilege = privilege,\n        // Creating a new entry, so is now present.\n        .present = 1,\n        .base_high = @truncate(u16, base >> 16),\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "function",
      "name": "makeEntry",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to isIdtOpen from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "pub fn isIdtOpen(entry: IdtEntry) bool {\n    return entry.present == 1;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "function",
      "name": "isIdtOpen",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to openInterruptGate from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "pub fn openInterruptGate(index: u8, handler: InterruptHandler) IdtError!void {\n    // As the IDT is a u8, that maximum can only be 255 which is the maximum IDT entries.\n    // So there can't be a out of bounds.\n    if (isIdtOpen(idt_entries[index])) {\n        return IdtError.IdtEntryExists;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "function",
      "name": "openInterruptGate",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to mock_lidt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "fn mock_lidt(ptr: *const IdtPtr) void {\n    expectEqual(TABLE_SIZE, ptr.limit) catch panic(null, \"IDT pointer limit was not correct\", .{}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "function",
      "name": "mock_lidt",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_loadedIDTSuccess from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "fn rt_loadedIDTSuccess() void {\n    const loaded_idt = arch.sidt();\n    if (idt_ptr.limit != loaded_idt.limit) {\n        panic(@errorReturnTrace(), \"FAILURE: IDT not loaded properly: 0x{X}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "function",
      "name": "rt_loadedIDTSuccess",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "pub fn runtimeTests() void {\n    rt_loadedIDTSuccess();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TASK_GATE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const TASK_GATE: u4 = 0x5;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "TASK_GATE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to INTERRUPT_GATE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const INTERRUPT_GATE: u4 = 0xE;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "INTERRUPT_GATE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TRAP_GATE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const TRAP_GATE: u4 = 0xF;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "TRAP_GATE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PRIVILEGE_RING_0 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const PRIVILEGE_RING_0: u2 = 0x0;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "PRIVILEGE_RING_0",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PRIVILEGE_RING_1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const PRIVILEGE_RING_1: u2 = 0x1;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "PRIVILEGE_RING_1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PRIVILEGE_RING_2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const PRIVILEGE_RING_2: u2 = 0x2;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "PRIVILEGE_RING_2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PRIVILEGE_RING_3 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const PRIVILEGE_RING_3: u2 = 0x3;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "PRIVILEGE_RING_3",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TABLE_SIZE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const TABLE_SIZE: u16 = @sizeOf(IdtEntry) * NUMBER_OF_ENTRIES - 1;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "TABLE_SIZE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NUMBER_OF_ENTRIES from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "pub const NUMBER_OF_ENTRIES: u16 = 256;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "NUMBER_OF_ENTRIES",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to expected from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const expected: u64 = 0b0101010101010101101001010000000001010101010101010101010101010101;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "expected",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to index from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/idt.zig",
    "response": "const index: u8 = 100;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/idt.zig",
      "type": "const",
      "name": "index",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to irqHandler from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/interrupts.zig",
    "response": "fn irqHandler(ctx: *arch.CpuState) usize;\nextern fn isrHandler(ctx: *arch.CpuState) usize;\n\n///\n/// The main handler for all exceptions and interrupts. This will then go and call the correct\n/// handler for an ISR or IRQ.\n///\n/// Arguments:\n///     IN ctx: *arch.CpuState - Pointer to the exception context containing the contents\n///                              of the registers at the time of a exception.\n///\nexport fn handler(ctx: *arch.CpuState) usize {\n    if (ctx.int_num < irq.IRQ_OFFSET or ctx.int_num == syscalls.INTERRUPT) {\n        return isrHandler(ctx);\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/interrupts.zig",
      "type": "function",
      "name": "irqHandler",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to commonStub from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/interrupts.zig",
    "response": "fn commonStub() callconv(.Naked) void {\n    asm volatile (\n        \\\\pusha\n        \\\\push  %%ds\n        \\\\push  %%es\n        \\\\push  %%fs\n        \\\\push  %%gs\n        \\\\mov %%cr3, %%eax\n        \\\\push %%eax\n        \\\\mov   $0x10, %%ax\n        \\\\mov   %%ax, %%ds\n        \\\\mov   %%ax, %%es\n        \\\\mov   %%ax, %%fs\n        \\\\mov   %%ax, %%gs\n        \\\\mov   %%esp, %%eax\n        \\\\push  %%eax\n        \\\\call  handler\n        \\\\mov   %%eax, %%esp\n    );\n\n    // Pop off the new cr3 then check if it's the same as the previous cr3\n    // If so don't change cr3 to avoid a TLB flush\n    asm volatile (\n        \\\\pop   %%eax\n        \\\\mov   %%cr3, %%ebx\n        \\\\cmp   %%eax, %%ebx\n        \\\\je    same_cr3\n        \\\\mov   %%eax, %%cr3\n        \\\\same_cr3:\n        \\\\pop   %%gs\n        \\\\pop   %%fs\n        \\\\pop   %%es\n        \\\\pop   %%ds\n        \\\\popa\n    );\n    // The Tss.esp0 value is the stack pointer used when an interrupt occurs. This should be the current process' stack pointer\n    // So skip the rest of the CpuState, set Tss.esp0 then un-skip the last few fields of the CpuState\n    asm volatile (\n        \\\\add   $0x1C, %%esp\n        \\\\.extern main_tss_entry\n        \\\\mov   %%esp, (main_tss_entry + 4)\n        \\\\sub   $0x14, %%esp\n        \\\\iret\n    );\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/interrupts.zig",
      "type": "function",
      "name": "commonStub",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getInterruptStub from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/interrupts.zig",
    "response": "pub fn getInterruptStub(comptime interrupt_num: u32) idt.InterruptHandler {\n    return struct {\n        fn func() callconv(.Naked) void {\n            asm volatile (\n                \\\\ cli\n            );\n\n            // These interrupts don't push an error code onto the stack, so will push a zero.\n            if (interrupt_num != 8 and !(interrupt_num >= 10 and interrupt_num <= 14) and interrupt_num != 17) {\n                asm volatile (\n                    \\\\ pushl $0\n                );\n            }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/interrupts.zig",
      "type": "function",
      "name": "getInterruptStub",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to irqHandler from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "fn irqHandler(ctx: *arch.CpuState) usize {\n    // Get the IRQ index, by getting the interrupt number and subtracting the offset.\n    if (ctx.int_num < IRQ_OFFSET) {\n        panic(@errorReturnTrace(), \"Not an IRQ number: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "irqHandler",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to openIrq from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "fn openIrq(index: u8, handler: idt.InterruptHandler) void {\n    idt.openInterruptGate(index, handler) catch |err| switch (err) {\n        error.IdtEntryExists => {\n            panic(@errorReturnTrace(), \"Error opening IRQ number: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "openIrq",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to isValidIrq from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "pub fn isValidIrq(irq_num: u32) bool {\n    return irq_num < NUMBER_OF_ENTRIES;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "isValidIrq",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to registerIrq from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "pub fn registerIrq(irq_num: u8, handler: IrqHandler) IrqError!void {\n    // Check whether the IRQ index is valid.\n    if (isValidIrq(irq_num)) {\n        // Check if a handler has already been registered.\n        if (irq_handlers[irq_num]) |_| {\n            return IrqError.IrqExists;\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "registerIrq",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to testFunction1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "fn testFunction1(ctx: *arch.CpuState) u32 {\n    // Suppress unused variable warnings\n    _ = ctx;\n    return 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "testFunction1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to testFunction2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "fn testFunction2(ctx: *arch.CpuState) u32 {\n    // Suppress unused variable warnings\n    _ = ctx;\n    return 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "testFunction2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_unregisteredHandlers from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "fn rt_unregisteredHandlers() void {\n    // Ensure all ISR are not registered yet\n    for (irq_handlers) |h, i| {\n        if (h) |_| {\n            panic(@errorReturnTrace(), \"FAILURE: Handler found for IRQ: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "rt_unregisteredHandlers",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_openedIdtEntries from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "fn rt_openedIdtEntries() void {\n    const loaded_idt = arch.sidt();\n    const idt_entries = @intToPtr([*]idt.IdtEntry, loaded_idt.base)[0..idt.NUMBER_OF_ENTRIES];\n\n    for (idt_entries) |entry, i| {\n        if (i >= IRQ_OFFSET and isValidIrq(i - IRQ_OFFSET)) {\n            if (!idt.isIdtOpen(entry)) {\n                panic(@errorReturnTrace(), \"FAILURE: IDT entry for {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "rt_openedIdtEntries",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "pub fn runtimeTests() void {\n    rt_unregisteredHandlers();\n    rt_openedIdtEntries();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NUMBER_OF_ENTRIES from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "const NUMBER_OF_ENTRIES: u16 = 16;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "const",
      "name": "NUMBER_OF_ENTRIES",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "pub const IRQ_OFFSET: u16 = 32;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "const",
      "name": "IRQ_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ret from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/irq.zig",
    "response": "const ret: idt.IdtError!void = {};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/irq.zig",
      "type": "const",
      "name": "ret",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to isrHandler from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "fn isrHandler(ctx: *arch.CpuState) usize {\n    // Get the interrupt number\n    const isr_num = ctx.int_num;\n\n    var ret_esp = @ptrToInt(ctx);\n\n    if (isValidIsr(isr_num)) {\n        if (isr_num == syscalls.INTERRUPT) {\n            // A syscall, so use the syscall handler\n            if (syscall_handler) |handler| {\n                ret_esp = handler(ctx);\n            }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "isrHandler",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to openIsr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "fn openIsr(index: u8, handler: idt.InterruptHandler) void {\n    idt.openInterruptGate(index, handler) catch |err| switch (err) {\n        error.IdtEntryExists => {\n            panic(@errorReturnTrace(), \"Error opening ISR number: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "openIsr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to isValidIsr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub fn isValidIsr(isr_num: u32) bool {\n    return isr_num < NUMBER_OF_ENTRIES or isr_num == syscalls.INTERRUPT;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "isValidIsr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to registerIsr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub fn registerIsr(isr_num: u16, handler: IsrHandler) IsrError!void {\n    // Check if a valid ISR index\n    if (isValidIsr(isr_num)) {\n        if (isr_num == syscalls.INTERRUPT) {\n            // Syscall handler\n            if (syscall_handler) |_| {\n                // One already registered\n                return IsrError.IsrExists;\n            }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "registerIsr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to testFunction1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "fn testFunction1(ctx: *arch.CpuState) u32 {\n    // Suppress unused var warning\n    _ = ctx;\n    return 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "testFunction1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to testFunction2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "fn testFunction2(ctx: *arch.CpuState) u32 {\n    // Suppress unused var warning\n    _ = ctx;\n    return 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "testFunction2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to testFunction3 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "fn testFunction3(ctx: *arch.CpuState) u32 {\n    // Suppress unused var warning\n    _ = ctx;\n    return 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "testFunction3",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to testFunction4 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "fn testFunction4(ctx: *arch.CpuState) u32 {\n    // Suppress unused var warning\n    _ = ctx;\n    return 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "testFunction4",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_unregisteredHandlers from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "fn rt_unregisteredHandlers() void {\n    // Ensure all ISR are not registered yet\n    for (isr_handlers) |h, i| {\n        if (h) |_| {\n            panic(@errorReturnTrace(), \"FAILURE: Handler found for ISR: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "rt_unregisteredHandlers",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_openedIdtEntries from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "fn rt_openedIdtEntries() void {\n    const loaded_idt = arch.sidt();\n    const idt_entries = @intToPtr([*]idt.IdtEntry, loaded_idt.base)[0..idt.NUMBER_OF_ENTRIES];\n\n    for (idt_entries) |entry, i| {\n        if (isValidIsr(i)) {\n            if (!idt.isIdtOpen(entry)) {\n                panic(@errorReturnTrace(), \"FAILURE: IDT entry for {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "rt_openedIdtEntries",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub fn runtimeTests() void {\n    rt_unregisteredHandlers();\n    rt_openedIdtEntries();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NUMBER_OF_ENTRIES from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "const NUMBER_OF_ENTRIES: u8 = 32;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "NUMBER_OF_ENTRIES",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DIVIDE_BY_ZERO from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const DIVIDE_BY_ZERO: u8 = 0;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "DIVIDE_BY_ZERO",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to SINGLE_STEP_DEBUG from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const SINGLE_STEP_DEBUG: u8 = 1;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "SINGLE_STEP_DEBUG",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NON_MASKABLE_INTERRUPT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const NON_MASKABLE_INTERRUPT: u8 = 2;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "NON_MASKABLE_INTERRUPT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to BREAKPOINT_DEBUG from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const BREAKPOINT_DEBUG: u8 = 3;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "BREAKPOINT_DEBUG",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OVERFLOW from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const OVERFLOW: u8 = 4;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "OVERFLOW",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to BOUND_RANGE_EXCEEDED from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const BOUND_RANGE_EXCEEDED: u8 = 5;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "BOUND_RANGE_EXCEEDED",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to INVALID_OPCODE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const INVALID_OPCODE: u8 = 6;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "INVALID_OPCODE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DEVICE_NOT_AVAILABLE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const DEVICE_NOT_AVAILABLE: u8 = 7;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "DEVICE_NOT_AVAILABLE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DOUBLE_FAULT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const DOUBLE_FAULT: u8 = 8;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "DOUBLE_FAULT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to COPROCESSOR_SEGMENT_OVERRUN from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const COPROCESSOR_SEGMENT_OVERRUN: u8 = 9;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "COPROCESSOR_SEGMENT_OVERRUN",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to INVALID_TASK_STATE_SEGMENT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const INVALID_TASK_STATE_SEGMENT: u8 = 10;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "INVALID_TASK_STATE_SEGMENT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to SEGMENT_NOT_PRESENT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const SEGMENT_NOT_PRESENT: u8 = 11;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "SEGMENT_NOT_PRESENT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to STACK_SEGMENT_FAULT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const STACK_SEGMENT_FAULT: u8 = 12;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "STACK_SEGMENT_FAULT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to GENERAL_PROTECTION_FAULT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const GENERAL_PROTECTION_FAULT: u8 = 13;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "GENERAL_PROTECTION_FAULT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PAGE_FAULT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const PAGE_FAULT: u8 = 14;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "PAGE_FAULT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to X87_FLOAT_POINT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const X87_FLOAT_POINT: u8 = 16;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "X87_FLOAT_POINT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ALIGNMENT_CHECK from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const ALIGNMENT_CHECK: u8 = 17;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "ALIGNMENT_CHECK",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to MACHINE_CHECK from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const MACHINE_CHECK: u8 = 18;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "MACHINE_CHECK",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to SIMD_FLOAT_POINT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const SIMD_FLOAT_POINT: u8 = 19;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "SIMD_FLOAT_POINT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to VIRTUALISATION from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const VIRTUALISATION: u8 = 20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "VIRTUALISATION",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to SECURITY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "pub const SECURITY: u8 = 30;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "SECURITY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ret from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/isr.zig",
    "response": "const ret: idt.IdtError!void = {};",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/isr.zig",
      "type": "const",
      "name": "ret",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readKeyboardBuffer from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/keyboard.zig",
    "response": "fn readKeyboardBuffer() u8 {\n    return arch.in(u8, 0x60);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/keyboard.zig",
      "type": "function",
      "name": "readKeyboardBuffer",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to parseScanCode from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/keyboard.zig",
    "response": "fn parseScanCode(scan_code: u8) ?KeyAction {\n    var released = false;\n    // The print screen key requires special processing since it uses a unique byte sequence\n    if (on_print_screen or scan_code >= 128) {\n        released = true;\n        if (special_sequence or on_print_screen) {\n            // Special sequences are followed by a certain number of release scan codes that should be ignored. Update the expected number\n            if (expected_releases >= 1) {\n                expected_releases -= 1;\n                return null;\n            }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/keyboard.zig",
      "type": "function",
      "name": "parseScanCode",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to onKeyEvent from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/keyboard.zig",
    "response": "fn onKeyEvent(ctx: *arch.CpuState) usize {\n    const scan_code = readKeyboardBuffer();\n    if (parseScanCode(scan_code)) |action| {\n        if (!keyboard.writeKey(action)) {\n            log.warn(\"No room for keyboard action {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/keyboard.zig",
      "type": "function",
      "name": "onKeyEvent",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to init from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/keyboard.zig",
    "response": "pub fn init(allocator: Allocator) Allocator.Error!*Keyboard {\n    irq.registerIrq(pic.IRQ_KEYBOARD, onKeyEvent) catch |e| {\n        panic(@errorReturnTrace(), \"Failed to register keyboard IRQ: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/keyboard.zig",
      "type": "function",
      "name": "init",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to testResetGlobals from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/keyboard.zig",
    "response": "fn testResetGlobals() void {\n    pressed_keys = 0;\n    special_sequence = false;\n    expected_releases = 0;\n    on_print_screen = false;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/keyboard.zig",
      "type": "function",
      "name": "testResetGlobals",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to copy from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "pub fn copy(self: *const Directory) Directory {\n        return self.*;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "copy",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to virtToDirEntryIdx from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn virtToDirEntryIdx(virt: usize) usize {\n    return virt / PAGE_SIZE_4MB;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "virtToDirEntryIdx",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to virtToTableEntryIdx from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn virtToTableEntryIdx(virt: usize) usize {\n    return (virt / PAGE_SIZE_4KB) % ENTRIES_PER_TABLE;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "virtToTableEntryIdx",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to setAttribute from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn setAttribute(val: *align(1) u32, attr: u32) void {\n    val.* |= attr;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "setAttribute",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to clearAttribute from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn clearAttribute(val: *align(1) u32, attr: u32) void {\n    val.* &= ~attr;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "clearAttribute",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to mapDirEntry from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn mapDirEntry(dir: *Directory, virt_start: usize, virt_end: usize, phys_start: usize, phys_end: usize, attrs: vmm.Attributes, allocator: Allocator) (vmm.MapperError || Allocator.Error)!void {\n    if (phys_start > phys_end) {\n        return vmm.MapperError.InvalidPhysicalAddress;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "mapDirEntry",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to unmapDirEntry from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn unmapDirEntry(dir: *Directory, virt_start: usize, virt_end: usize, allocator: Allocator) vmm.MapperError!void {\n    // Suppress unused var warning\n    _ = allocator;\n    const entry = virtToDirEntryIdx(virt_start);\n    const table = dir.tables[entry] orelse return vmm.MapperError.NotMapped;\n    var addr = virt_start;\n    while (addr < virt_end) : (addr += PAGE_SIZE_4KB) {\n        var table_entry = &table.entries[virtToTableEntryIdx(addr)];\n        if (table_entry.* & TENTRY_PRESENT != 0) {\n            clearAttribute(table_entry, TENTRY_PRESENT);\n            if (dir == &kernel_directory) {\n                asm volatile (\"invlpg (%[addr])\"\n                    :\n                    : [addr] \"r\" (addr),\n                    : \"memory\"\n                );\n            }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "unmapDirEntry",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to mapTableEntry from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn mapTableEntry(dir: *const Directory, entry: *align(1) TableEntry, virt_addr: usize, phys_addr: usize, attrs: vmm.Attributes) vmm.MapperError!void {\n    if (!std.mem.isAligned(phys_addr, PAGE_SIZE_4KB)) {\n        return vmm.MapperError.MisalignedPhysicalAddress;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "mapTableEntry",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to map from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "pub fn map(virtual_start: usize, virtual_end: usize, phys_start: usize, phys_end: usize, attrs: vmm.Attributes, allocator: Allocator, dir: *Directory) (Allocator.Error || vmm.MapperError)!void {\n    var virt_addr = virtual_start;\n    var phys_addr = phys_start;\n    var virt_next = std.math.min(virtual_end, std.mem.alignBackward(virt_addr, PAGE_SIZE_4MB) + PAGE_SIZE_4MB);\n    var phys_next = std.math.min(phys_end, std.mem.alignBackward(phys_addr, PAGE_SIZE_4MB) + PAGE_SIZE_4MB);\n    var entry_idx = virtToDirEntryIdx(virt_addr);\n    while (entry_idx < ENTRIES_PER_DIRECTORY and virt_addr < virtual_end) : ({\n        virt_addr = virt_next;\n        phys_addr = phys_next;\n        virt_next = std.math.min(virtual_end, virt_next + PAGE_SIZE_4MB);\n        phys_next = std.math.min(phys_end, phys_next + PAGE_SIZE_4MB);\n        entry_idx += 1;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "map",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to unmap from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "pub fn unmap(virtual_start: usize, virtual_end: usize, allocator: Allocator, dir: *Directory) vmm.MapperError!void {\n    var virt_addr = virtual_start;\n    var virt_next = std.math.min(virtual_end, std.mem.alignBackward(virt_addr, PAGE_SIZE_4MB) + PAGE_SIZE_4MB);\n    var entry_idx = virtToDirEntryIdx(virt_addr);\n    while (entry_idx < ENTRIES_PER_DIRECTORY and virt_addr < virtual_end) : ({\n        virt_addr = virt_next;\n        virt_next = std.math.min(virtual_end, virt_next + PAGE_SIZE_4MB);\n        entry_idx += 1;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "unmap",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to pageFault from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn pageFault(state: *arch.CpuState) u32 {\n    const err = state.error_code;\n    const diag_present = if (err & 0b1 != 0) \"present\" else \"non-present\";\n    const diag_rw = if (err & 0b10 != 0) \"writing to\" else \"reading from\";\n    const diag_ring = if (err & 0b100 != 0) \"user\" else \"kernel\";\n    const diag_reserved = if (err & 0b1000 != 0) \" with reserved bit set\" else \"\";\n    const diag_fetch = if (err & 0b10000 != 0) \"instruction\" else \"data\";\n    log.info(\"Page fault: {s}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "pageFault",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to init from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "pub fn init(mem_profile: *const MemProfile) void {\n    log.info(\"Init\\n\", .{}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "init",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to checkDirEntry from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn checkDirEntry(entry: DirectoryEntry, virt_start: usize, virt_end: usize, phys_start: usize, attrs: vmm.Attributes, table: *Table, present: bool) !void {\n    try expectEqual(entry & DENTRY_PRESENT, if (present) DENTRY_PRESENT else 0);\n    try expectEqual(entry & DENTRY_WRITABLE, if (attrs.writable) DENTRY_WRITABLE else 0);\n    try expectEqual(entry & DENTRY_USER, if (attrs.kernel) 0 else DENTRY_USER);\n    try expectEqual(entry & DENTRY_WRITE_THROUGH, DENTRY_WRITE_THROUGH);\n    try expectEqual(entry & DENTRY_CACHE_DISABLED, if (attrs.cachable) 0 else DENTRY_CACHE_DISABLED);\n    try expectEqual(entry & DENTRY_4MB_PAGES, 0);\n    try expectEqual(entry & DENTRY_ZERO, 0);\n\n    var tentry_idx = virtToTableEntryIdx(virt_start);\n    var tentry_idx_end = virtToTableEntryIdx(virt_end);\n    var phys = phys_start;\n    while (tentry_idx < tentry_idx_end) : ({\n        tentry_idx += 1;\n        phys += PAGE_SIZE_4KB;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "checkDirEntry",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to checkTableEntry from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn checkTableEntry(entry: TableEntry, page_phys: usize, attrs: vmm.Attributes, present: bool) !void {\n    try expectEqual(entry & TENTRY_PRESENT, if (present) TENTRY_PRESENT else 0);\n    try expectEqual(entry & TENTRY_WRITABLE, if (attrs.writable) TENTRY_WRITABLE else 0);\n    try expectEqual(entry & TENTRY_USER, if (attrs.kernel) 0 else TENTRY_USER);\n    try expectEqual(entry & TENTRY_WRITE_THROUGH, TENTRY_WRITE_THROUGH);\n    try expectEqual(entry & TENTRY_CACHE_DISABLED, if (attrs.cachable) 0 else TENTRY_CACHE_DISABLED);\n    try expectEqual(entry & TENTRY_ZERO, 0);\n    try expectEqual(entry & TENTRY_GLOBAL, 0);\n    try expectEqual(entry & TENTRY_PAGE_ADDR, page_phys);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "checkTableEntry",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_pageFault from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn rt_pageFault(ctx: *arch.CpuState) u32 {\n    faulted = true;\n    // Return to the fault callback\n    ctx.eip = @ptrToInt(&if (use_callback2) rt_fault_callback2 else rt_fault_callback);\n\n    return @ptrToInt(ctx);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "rt_pageFault",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_accessUnmappedMem from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn rt_accessUnmappedMem(v_end: u32) void {\n    use_callback2 = false;\n    faulted = false;\n    // Accessing unmapped mem causes a page fault\n    var ptr = @intToPtr(*u8, v_end);\n    var value = ptr.*;\n    // Need this as in release builds the above is optimised out so it needs to be use\n    log.err(\"FAILURE: Value: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "rt_accessUnmappedMem",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_accessMappedMem from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "fn rt_accessMappedMem(v_end: u32) void {\n    use_callback2 = true;\n    faulted = false;\n    // Accessing mapped memory doesn't cause a page fault\n    var ptr = @intToPtr(*u8, v_end - PAGE_SIZE_4KB);\n    // Print the value to avoid the load from being optimised away\n    log.info(\"Read value in mapped memory: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "rt_accessMappedMem",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "pub fn runtimeTests(v_end: u32) void {\n    rt_accessUnmappedMem(v_end);\n    rt_accessMappedMem(v_end);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ENTRIES_PER_DIRECTORY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const ENTRIES_PER_DIRECTORY: u32 = 1024;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "ENTRIES_PER_DIRECTORY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ENTRIES_PER_TABLE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const ENTRIES_PER_TABLE: u32 = 1024;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "ENTRIES_PER_TABLE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PAGES_PER_DIR_ENTRY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const PAGES_PER_DIR_ENTRY: u32 = 1024;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "PAGES_PER_DIR_ENTRY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PAGES_PER_DIR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const PAGES_PER_DIR: u32 = ENTRIES_PER_DIRECTORY * PAGES_PER_DIR_ENTRY;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "PAGES_PER_DIR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_PRESENT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_PRESENT: u32 = 0x1;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_PRESENT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_WRITABLE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_WRITABLE: u32 = 0x2;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_WRITABLE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_USER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_USER: u32 = 0x4;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_USER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_WRITE_THROUGH from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_WRITE_THROUGH: u32 = 0x8;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_WRITE_THROUGH",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_CACHE_DISABLED from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_CACHE_DISABLED: u32 = 0x10;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_CACHE_DISABLED",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_ACCESSED from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_ACCESSED: u32 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_ACCESSED",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_ZERO from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_ZERO: u32 = 0x40;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_ZERO",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_4MB_PAGES from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_4MB_PAGES: u32 = 0x80;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_4MB_PAGES",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_IGNORED from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_IGNORED: u32 = 0x100;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_IGNORED",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_AVAILABLE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_AVAILABLE: u32 = 0xE00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_AVAILABLE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to DENTRY_PAGE_ADDR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const DENTRY_PAGE_ADDR: u32 = 0xFFFFF000;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "DENTRY_PAGE_ADDR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_PRESENT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_PRESENT: u32 = 0x1;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_PRESENT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_WRITABLE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_WRITABLE: u32 = 0x2;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_WRITABLE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_USER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_USER: u32 = 0x4;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_USER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_WRITE_THROUGH from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_WRITE_THROUGH: u32 = 0x8;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_WRITE_THROUGH",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_CACHE_DISABLED from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_CACHE_DISABLED: u32 = 0x10;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_CACHE_DISABLED",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_ACCESSED from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_ACCESSED: u32 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_ACCESSED",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_DIRTY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_DIRTY: u32 = 0x40;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_DIRTY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_ZERO from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_ZERO: u32 = 0x80;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_ZERO",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_GLOBAL from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_GLOBAL: u32 = 0x100;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_GLOBAL",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_AVAILABLE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_AVAILABLE: u32 = 0xE00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_AVAILABLE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to TENTRY_PAGE_ADDR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const TENTRY_PAGE_ADDR: u32 = 0xFFFFF000;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "TENTRY_PAGE_ADDR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PAGE_SIZE_4MB from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "pub const PAGE_SIZE_4MB: usize = 0x400000;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "PAGE_SIZE_4MB",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PAGE_SIZE_4KB from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "pub const PAGE_SIZE_4KB: usize = PAGE_SIZE_4MB / 1024;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "PAGE_SIZE_4KB",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to phys from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const phys: usize = 0 * PAGE_SIZE_4MB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "phys",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to phys_end from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const phys_end: usize = phys + PAGE_SIZE_4MB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "phys_end",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to virt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const virt: usize = 1 * PAGE_SIZE_4MB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "virt",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to virt_end from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const virt_end: usize = virt + PAGE_SIZE_4MB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "virt_end",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to phys from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const phys: usize = 7 * PAGE_SIZE_4MB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "phys",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to phys_end from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const phys_end: usize = phys + PAGE_SIZE_4MB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "phys_end",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to virt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const virt: usize = 8 * PAGE_SIZE_4MB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "virt",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to virt_end from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const virt_end: usize = virt + PAGE_SIZE_4MB;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "virt_end",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to phys_start from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const phys_start: usize = PAGE_SIZE_4MB * 2;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "phys_start",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to virt_start from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const virt_start: usize = PAGE_SIZE_4MB * 4;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "virt_start",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to phys_end from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const phys_end: usize = PAGE_SIZE_4MB * 4;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "phys_end",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to virt_end from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/paging.zig",
    "response": "const virt_end: usize = PAGE_SIZE_4MB * 6;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/paging.zig",
      "type": "const",
      "name": "virt_end",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getWidth from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "pub fn getWidth(comptime pci_reg: PciRegisters) type {\n        return switch (pci_reg) {\n            .RevisionId, .ProgrammingInterface, .Subclass, .ClassCode, .CacheLineSize, .LatencyTimer, .HeaderType, .BIST, .InterruptLine, .InterruptPin, .MinGrant, .MaxLatency, .CapabilitiesPtr => u8,\n            .VenderId, .DeviceId, .Command, .Status, .SubsystemVenderId, .SubsystemId => u16,\n            .BaseAddr0, .BaseAddr1, .BaseAddr2, .BaseAddr3, .BaseAddr4, .BaseAddr5, .CardbusCISPtr, .ExpansionROMBaseAddr => u32,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "function",
      "name": "getWidth",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getAddress from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "pub fn getAddress(self: Self, function: u3, comptime pci_reg: PciRegisters) PciAddress {\n        return PciAddress{\n            .bus = self.bus,\n            .device = self.device,\n            .function = function,\n            .register_offset = @enumToInt(pci_reg),\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "function",
      "name": "getAddress",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to configReadData from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "pub fn configReadData(self: Self, function: u3, comptime pci_reg: PciRegisters) pci_reg.getWidth() {\n        const address = self.getAddress(function, pci_reg);\n        // Last 2 bits of offset must be zero\n        // This is because we are requesting a integer (4 bytes) and cannot request a\n        // single byte that isn't 4 bytes aligned\n        // Write the address\n        arch.out(CONFIG_ADDRESS, @bitCast(u32, address) & 0xFFFFFFFC);\n        // Read the data\n        const result = arch.in(u32, CONFIG_DATA);\n        // Return the size the user wants\n        const shift = switch (pci_reg.getWidth()) {\n            u8 => (@intCast(u5, address.register_offset & 0x3)) * 8,\n            u16 => (@intCast(u5, address.register_offset & 0x2)) * 8,\n            u32 => 0,\n            else => @compileError(\"Invalid read size. Only u8, u16 and u32 allowed.\"),\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "function",
      "name": "configReadData",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to create from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "pub fn create(pci_device: PciDevice, function: u3) Error!PciDeviceInfo {\n        const vender_id = pci_device.configReadData(function, .VenderId);\n\n        // No function available, try the next\n        if (vender_id == 0xFFFF) {\n            return Error.NoFunction;\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "function",
      "name": "create",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to print from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "pub fn print(device: arch.Device) void {\n        log.info(\"BUS: 0x{X}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "function",
      "name": "print",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getDevices from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "pub fn getDevices(allocator: Allocator) Allocator.Error![]PciDeviceInfo {\n    // Create an array list for the devices.\n    var pci_device_infos = ArrayList(PciDeviceInfo).init(allocator);\n    defer pci_device_infos.deinit();\n\n    // Iterate through all the possible devices\n    var _bus: u32 = 0;\n    while (_bus < 8) : (_bus += 1) {\n        const bus = @intCast(u8, _bus);\n        var _device: u32 = 0;\n        while (_device < 32) : (_device += 1) {\n            const device = @intCast(u5, _device);\n            // Devices have at least 1 function\n            const pci_device = PciDevice{\n                .bus = bus,\n                .device = device,\n            }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "function",
      "name": "getDevices",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig struct similar to PciDevice from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "const PciDevice = struct {\n    /// The bus on which the device is on\n    bus: u8,\n\n    /// The device number.\n    device: u5,\n\n    const Self = @This();\n\n    ///\n    /// Get the PCI address for this device and for a function and register.\n    ///\n    /// Argument:\n    ///     IN self: Self                     - This device.\n    ///     IN function: u3                   - The function.\n    ///     IN comptime pci_reg: PciRegisters - The register.\n    ///\n    /// Return: PciAddress\n    ///     The PCI address that can be used to read the register offset for this device and function.\n    ///\n    pub fn getAddress(self: Self, function: u3, comptime pci_reg: PciRegisters) PciAddress {\n        return PciAddress{\n            .bus = self.bus,\n            .device = self.device,\n            .function = function,\n            .register_offset = @enumToInt(pci_reg),\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "struct",
      "name": "PciDevice",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig struct similar to PciDeviceInfo from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "pub const PciDeviceInfo = struct {\n    pci_device: PciDevice,\n    function: u3,\n    vender_id: u16,\n    device_id: u16,\n    subclass: u8,\n    class_code: u8,\n\n    /// The error set.\n    pub const Error = error{\n        /// There is no functions available for the given function number for a given PCI device.\n        NoFunction,\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "struct",
      "name": "PciDeviceInfo",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to CONFIG_ADDRESS from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "const CONFIG_ADDRESS: u16 = 0x0CF8;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "const",
      "name": "CONFIG_ADDRESS",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to CONFIG_DATA from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pci.zig",
    "response": "const CONFIG_DATA: u16 = 0x0CFC;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pci.zig",
      "type": "const",
      "name": "CONFIG_DATA",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sendCommandMaster from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn sendCommandMaster(cmd: u8) void {\n    arch.out(MASTER_COMMAND_REG, cmd);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "sendCommandMaster",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sendCommandSlave from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn sendCommandSlave(cmd: u8) void {\n    arch.out(SLAVE_COMMAND_REG, cmd);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "sendCommandSlave",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sendDataMaster from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn sendDataMaster(data: u8) void {\n    arch.out(MASTER_DATA_REG, data);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "sendDataMaster",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sendDataSlave from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn sendDataSlave(data: u8) void {\n    arch.out(SLAVE_DATA_REG, data);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "sendDataSlave",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readDataMaster from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn readDataMaster() u8 {\n    return arch.in(u8, MASTER_DATA_REG);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "readDataMaster",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readDataSlave from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn readDataSlave() u8 {\n    return arch.in(u8, SLAVE_DATA_REG);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "readDataSlave",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readMasterIrr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn readMasterIrr() u8 {\n    sendCommandMaster(OCW3_DEFAULT | OCW3_ACT_ON_READ | OCW3_READ_IRR);\n    return arch.in(u8, MASTER_STATUS_REG);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "readMasterIrr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readSlaveIrr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn readSlaveIrr() u8 {\n    sendCommandSlave(OCW3_DEFAULT | OCW3_ACT_ON_READ | OCW3_READ_IRR);\n    return arch.in(u8, SLAVE_STATUS_REG);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "readSlaveIrr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readMasterIsr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn readMasterIsr() u8 {\n    sendCommandMaster(OCW3_DEFAULT | OCW3_ACT_ON_READ | OCW3_READ_ISR);\n    return arch.in(u8, MASTER_STATUS_REG);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "readMasterIsr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readSlaveIsr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn readSlaveIsr() u8 {\n    sendCommandSlave(OCW3_DEFAULT | OCW3_ACT_ON_READ | OCW3_READ_ISR);\n    return arch.in(u8, SLAVE_STATUS_REG);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "readSlaveIsr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sendEndOfInterrupt from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub fn sendEndOfInterrupt(irq_num: u8) void {\n    if (irq_num >= 8) {\n        sendCommandSlave(OCW2_END_OF_INTERRUPT);\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "sendEndOfInterrupt",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to spuriousIrq from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub fn spuriousIrq(irq_num: u8) bool {\n    // Only for IRQ 7 and 15\n    if (irq_num == 7) {\n        // Read master ISR\n        // Check the MSB is zero, if so, then is a spurious IRQ\n        // This is (1 << irq_num) or (1 << 7) to check if it is set for this IRQ\n        if ((readMasterIsr() & 0x80) == 0) {\n            spurious_irq_counter += 1;\n            return true;\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "spuriousIrq",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to setMask from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub fn setMask(irq_num: u8) void {\n    const port: u16 = if (irq_num < 8) MASTER_DATA_REG else SLAVE_DATA_REG;\n    const shift = @intCast(u3, irq_num % 8);\n    const value: u8 = arch.in(u8, port) | (@as(u8, 1) << shift);\n    arch.out(port, value);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "setMask",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to clearMask from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub fn clearMask(irq_num: u8) void {\n    const port: u16 = if (irq_num < 8) MASTER_DATA_REG else SLAVE_DATA_REG;\n    const shift = @intCast(u3, irq_num % 8);\n    const value: u8 = arch.in(u8, port) & ~(@as(u8, 1) << shift);\n    arch.out(port, value);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "clearMask",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_picAllMasked from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "fn rt_picAllMasked() void {\n    // The master will have interrupt 2 clear because this is the link to the slave (third bit)\n    if (readDataMaster() != 0xFB) {\n        panic(@errorReturnTrace(), \"FAILURE: Master masks are not set, found: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "rt_picAllMasked",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub fn runtimeTests() void {\n    rt_picAllMasked();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to MASTER_COMMAND_REG from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const MASTER_COMMAND_REG: u16 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "MASTER_COMMAND_REG",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to MASTER_STATUS_REG from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const MASTER_STATUS_REG: u16 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "MASTER_STATUS_REG",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to MASTER_DATA_REG from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const MASTER_DATA_REG: u16 = 0x21;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "MASTER_DATA_REG",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to SLAVE_COMMAND_REG from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const SLAVE_COMMAND_REG: u16 = 0xA0;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "SLAVE_COMMAND_REG",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to SLAVE_STATUS_REG from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const SLAVE_STATUS_REG: u16 = 0xA0;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "SLAVE_STATUS_REG",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to SLAVE_DATA_REG from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const SLAVE_DATA_REG: u16 = 0xA1;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "SLAVE_DATA_REG",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW1_EXPECT_ICW4 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW1_EXPECT_ICW4: u8 = 0x01;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW1_EXPECT_ICW4",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW1_SINGLE_CASCADE_MODE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW1_SINGLE_CASCADE_MODE: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW1_SINGLE_CASCADE_MODE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW1_CALL_ADDRESS_INTERVAL_4 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW1_CALL_ADDRESS_INTERVAL_4: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW1_CALL_ADDRESS_INTERVAL_4",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW1_LEVEL_TRIGGER_MODE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW1_LEVEL_TRIGGER_MODE: u8 = 0x08;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW1_LEVEL_TRIGGER_MODE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW1_INITIALISATION from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW1_INITIALISATION: u8 = 0x10;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW1_INITIALISATION",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW2_MASTER_REMAP_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW2_MASTER_REMAP_OFFSET: u8 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW2_MASTER_REMAP_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW2_SLAVE_REMAP_OFFSET from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW2_SLAVE_REMAP_OFFSET: u8 = 0x28;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW2_SLAVE_REMAP_OFFSET",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW3_SLAVE_IRQ_MAP_TO_MASTER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW3_SLAVE_IRQ_MAP_TO_MASTER: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW3_SLAVE_IRQ_MAP_TO_MASTER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW3_MASTER_IRQ_MAP_FROM_SLAVE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW3_MASTER_IRQ_MAP_FROM_SLAVE: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW3_MASTER_IRQ_MAP_FROM_SLAVE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW4_80x86_MODE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW4_80x86_MODE: u8 = 0x01;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW4_80x86_MODE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW4_AUTO_END_OF_INTERRUPT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW4_AUTO_END_OF_INTERRUPT: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW4_AUTO_END_OF_INTERRUPT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW4_BUFFER_SELECT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW4_BUFFER_SELECT: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW4_BUFFER_SELECT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW4_BUFFER_MODE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW4_BUFFER_MODE: u8 = 0x08;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW4_BUFFER_MODE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to ICW4_FULLY_NESTED_MODE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const ICW4_FULLY_NESTED_MODE: u8 = 0x10;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "ICW4_FULLY_NESTED_MODE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW1_MASK_IRQ0_8 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW1_MASK_IRQ0_8: u8 = 0x01;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW1_MASK_IRQ0_8",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW1_MASK_IRQ1_9 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW1_MASK_IRQ1_9: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW1_MASK_IRQ1_9",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW1_MASK_IRQ2_10 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW1_MASK_IRQ2_10: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW1_MASK_IRQ2_10",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW1_MASK_IRQ3_11 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW1_MASK_IRQ3_11: u8 = 0x08;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW1_MASK_IRQ3_11",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW1_MASK_IRQ4_12 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW1_MASK_IRQ4_12: u8 = 0x10;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW1_MASK_IRQ4_12",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW1_MASK_IRQ5_13 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW1_MASK_IRQ5_13: u8 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW1_MASK_IRQ5_13",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW1_MASK_IRQ6_14 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW1_MASK_IRQ6_14: u8 = 0x40;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW1_MASK_IRQ6_14",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW1_MASK_IRQ7_15 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW1_MASK_IRQ7_15: u8 = 0x80;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW1_MASK_IRQ7_15",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW2_INTERRUPT_LEVEL_1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW2_INTERRUPT_LEVEL_1: u8 = 0x01;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW2_INTERRUPT_LEVEL_1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW2_INTERRUPT_LEVEL_2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW2_INTERRUPT_LEVEL_2: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW2_INTERRUPT_LEVEL_2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW2_INTERRUPT_LEVEL_3 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW2_INTERRUPT_LEVEL_3: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW2_INTERRUPT_LEVEL_3",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW2_END_OF_INTERRUPT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW2_END_OF_INTERRUPT: u8 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW2_END_OF_INTERRUPT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW2_SELECTION from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW2_SELECTION: u8 = 0x40;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW2_SELECTION",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW2_ROTATION from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW2_ROTATION: u8 = 0x80;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW2_ROTATION",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW3_READ_IRR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW3_READ_IRR: u8 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW3_READ_IRR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW3_READ_ISR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW3_READ_ISR: u8 = 0x01;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW3_READ_ISR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW3_ACT_ON_READ from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW3_ACT_ON_READ: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW3_ACT_ON_READ",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW3_POLL_COMMAND_ISSUED from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW3_POLL_COMMAND_ISSUED: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW3_POLL_COMMAND_ISSUED",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW3_DEFAULT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW3_DEFAULT: u8 = 0x08;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW3_DEFAULT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW3_SPECIAL_MASK from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW3_SPECIAL_MASK: u8 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW3_SPECIAL_MASK",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW3_ACK_ON_SPECIAL_MASK from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const OCW3_ACK_ON_SPECIAL_MASK: u8 = 0x40;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "OCW3_ACK_ON_SPECIAL_MASK",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_PIT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_PIT: u8 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_PIT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_KEYBOARD from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_KEYBOARD: u8 = 0x01;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_KEYBOARD",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_CASCADE_FOR_SLAVE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_CASCADE_FOR_SLAVE: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_CASCADE_FOR_SLAVE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_SERIAL_PORT_2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_SERIAL_PORT_2: u8 = 0x03;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_SERIAL_PORT_2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_SERIAL_PORT_1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_SERIAL_PORT_1: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_SERIAL_PORT_1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_PARALLEL_PORT_2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_PARALLEL_PORT_2: u8 = 0x05;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_PARALLEL_PORT_2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_DISKETTE_DRIVE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_DISKETTE_DRIVE: u8 = 0x06;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_DISKETTE_DRIVE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_PARALLEL_PORT_1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_PARALLEL_PORT_1: u8 = 0x07;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_PARALLEL_PORT_1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_REAL_TIME_CLOCK from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_REAL_TIME_CLOCK: u8 = 0x08;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_REAL_TIME_CLOCK",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_CGA_VERTICAL_RETRACE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_CGA_VERTICAL_RETRACE: u8 = 0x09;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_CGA_VERTICAL_RETRACE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_RESERVED1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_RESERVED1: u8 = 0x0A;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_RESERVED1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_RESERVED2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_RESERVED2: u8 = 0x0B;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_RESERVED2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_PS2_MOUSE from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_PS2_MOUSE: u8 = 0x0C;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_PS2_MOUSE",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_FLOATING_POINT_UNIT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_FLOATING_POINT_UNIT: u8 = 0x0D;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_FLOATING_POINT_UNIT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_PRIMARY_HARD_DISK_CONTROLLER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_PRIMARY_HARD_DISK_CONTROLLER: u8 = 0x0E;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_PRIMARY_HARD_DISK_CONTROLLER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to IRQ_SECONDARY_HARD_DISK_CONTROLLER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "pub const IRQ_SECONDARY_HARD_DISK_CONTROLLER: u8 = 0x0F;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "IRQ_SECONDARY_HARD_DISK_CONTROLLER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to port from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const port: u16 = if (irq_num < 8) MASTER_DATA_REG else SLAVE_DATA_REG;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "port",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to value from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const value: u8 = arch.in(u8, port) | (@as(u8, 1) << shift);",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "value",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to port from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const port: u16 = if (irq_num < 8) MASTER_DATA_REG else SLAVE_DATA_REG;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "port",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to value from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pic.zig",
    "response": "const value: u8 = arch.in(u8, port) & ~(@as(u8, 1) << shift);",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pic.zig",
      "type": "const",
      "name": "value",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getRegister from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "pub fn getRegister(counter: CounterSelect) u16 {\n        return switch (counter) {\n            .Counter0 => COUNTER_0_REGISTER,\n            .Counter1 => COUNTER_1_REGISTER,\n            .Counter2 => COUNTER_2_REGISTER,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "getRegister",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getCounterOCW from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "pub fn getCounterOCW(counter: CounterSelect) u8 {\n        return switch (counter) {\n            .Counter0 => OCW_SELECT_COUNTER_0,\n            .Counter1 => OCW_SELECT_COUNTER_1,\n            .Counter2 => OCW_SELECT_COUNTER_2,\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "getCounterOCW",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sendCommand from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "fn sendCommand(cmd: u8) void {\n    arch.out(COMMAND_REGISTER, cmd);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "sendCommand",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readBackCommand from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "fn readBackCommand(counter: CounterSelect) u8 {\n    sendCommand(0xC2);\n    return 0x3F & arch.in(u8, counter.getRegister());\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "readBackCommand",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to sendDataToCounter from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "fn sendDataToCounter(counter: CounterSelect, data: u8) void {\n    arch.out(counter.getRegister(), data);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "sendDataToCounter",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to pitHandler from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "fn pitHandler(ctx: *arch.CpuState) usize {\n    ticks +%= 1;\n    return @ptrToInt(ctx);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "pitHandler",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to setupCounter from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "fn setupCounter(counter: CounterSelect, freq: u32, mode: u8) PitError!void {\n    if (freq < 19 or freq > MAX_FREQUENCY) {\n        return PitError.InvalidFrequency;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "setupCounter",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to waitTicks from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "pub fn waitTicks(ticks_to_wait: u32) void {\n    if (ticks > maxInt(u32) - ticks_to_wait) {\n        // Integer overflow\n\n        // Calculate the 2 conditions\n        const wait_ticks1 = maxInt(u32) - ticks;\n        const wait_ticks2 = ticks_to_wait - wait_ticks1;\n\n        while (ticks > wait_ticks1) {\n            arch.halt();\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "waitTicks",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getFrequency from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "pub fn getFrequency() u32 {\n    return current_freq_0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "getFrequency",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_waitTicks from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "fn rt_waitTicks() void {\n    const waiting = 1000;\n    const epsilon = 2 * getFrequency() / 10000;\n\n    const previous_count = getTicks();\n\n    waitTicks(waiting);\n\n    const difference = getTicks() - waiting;\n\n    if (previous_count + epsilon < difference or previous_count > difference + epsilon) {\n        panic(@errorReturnTrace(), \"FAILURE: Waiting failed. difference: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "rt_waitTicks",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_waitTicks2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "fn rt_waitTicks2() void {\n    // Set the ticks to 16 less than the max\n    const waiting = 1000;\n    const epsilon = 2 * getFrequency() / 10000;\n\n    ticks = 0xFFFFFFF0;\n    const previous_count = getTicks() - 0xFFFFFFF0;\n\n    waitTicks(waiting);\n\n    // maxInt(u32) - u32(0xFFFFFFF0) = 15\n    const difference = getTicks() + 15 - waiting;\n\n    if (previous_count + epsilon < difference or previous_count > difference + epsilon) {\n        panic(@errorReturnTrace(), \"FAILURE: Waiting failed. difference: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "rt_waitTicks2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_initCounter_0 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "fn rt_initCounter_0() void {\n    const expected_ns: u32 = 99730;\n    const expected_ps: u32 = 727;\n    const expected_hz: u32 = 10027;\n\n    if (time_ns != expected_ns or time_under_1_ns != expected_ps or getFrequency() != expected_hz) {\n        panic(@errorReturnTrace(), \"FAILURE: Frequency not set properly. Hz: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "rt_initCounter_0",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "pub fn runtimeTests() void {\n    // Interrupts aren't enabled yet, so for the runtime tests, enable it temporary\n    arch.enableInterrupts();\n    defer arch.disableInterrupts();\n\n    rt_initCounter_0();\n    rt_waitTicks();\n    rt_waitTicks2();\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to COUNTER_0_REGISTER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const COUNTER_0_REGISTER: u16 = 0x40;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "COUNTER_0_REGISTER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to COUNTER_1_REGISTER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const COUNTER_1_REGISTER: u16 = 0x41;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "COUNTER_1_REGISTER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to COUNTER_2_REGISTER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const COUNTER_2_REGISTER: u16 = 0x42;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "COUNTER_2_REGISTER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to COMMAND_REGISTER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const COMMAND_REGISTER: u16 = 0x43;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "COMMAND_REGISTER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_BINARY_COUNT_BINARY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_BINARY_COUNT_BINARY: u8 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_BINARY_COUNT_BINARY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_BINARY_COUNT_BCD from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_BINARY_COUNT_BCD: u8 = 0x01;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_BINARY_COUNT_BCD",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_MODE_TERMINAL_COUNT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_MODE_TERMINAL_COUNT: u8 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_MODE_TERMINAL_COUNT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_MODE_ONE_SHOT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_MODE_ONE_SHOT: u8 = 0x02;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_MODE_ONE_SHOT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_MODE_RATE_GENERATOR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_MODE_RATE_GENERATOR: u8 = 0x04;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_MODE_RATE_GENERATOR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_MODE_SQUARE_WAVE_GENERATOR from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_MODE_SQUARE_WAVE_GENERATOR: u8 = 0x06;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_MODE_SQUARE_WAVE_GENERATOR",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_MODE_SOFTWARE_TRIGGER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_MODE_SOFTWARE_TRIGGER: u8 = 0x08;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_MODE_SOFTWARE_TRIGGER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_MODE_HARDWARE_TRIGGER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_MODE_HARDWARE_TRIGGER: u8 = 0x0A;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_MODE_HARDWARE_TRIGGER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_READ_LOAD_LATCH from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_READ_LOAD_LATCH: u8 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_READ_LOAD_LATCH",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_READ_LOAD_LSB_ONLY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_READ_LOAD_LSB_ONLY: u8 = 0x10;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_READ_LOAD_LSB_ONLY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_READ_LOAD_MSB_ONLY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_READ_LOAD_MSB_ONLY: u8 = 0x20;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_READ_LOAD_MSB_ONLY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_READ_LOAD_DATA from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_READ_LOAD_DATA: u8 = 0x30;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_READ_LOAD_DATA",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_SELECT_COUNTER_0 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_SELECT_COUNTER_0: u8 = 0x00;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_SELECT_COUNTER_0",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_SELECT_COUNTER_1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_SELECT_COUNTER_1: u8 = 0x40;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_SELECT_COUNTER_1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to OCW_SELECT_COUNTER_2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const OCW_SELECT_COUNTER_2: u8 = 0x80;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "OCW_SELECT_COUNTER_2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to MAX_FREQUENCY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const MAX_FREQUENCY: u32 = 1193182;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "MAX_FREQUENCY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to freq from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const freq: u32 = 10000;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "freq",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to cmd from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const cmd: u8 = 0xC2;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "cmd",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to expected_freq from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const expected_freq: u32 = 10027;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "expected_freq",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to expected_ns from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const expected_ns: u32 = 99730;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "expected_ns",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to expected_ps from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const expected_ps: u32 = 727;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "expected_ps",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to expected_hz from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/pit.zig",
    "response": "const expected_hz: u32 = 10027;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/pit.zig",
      "type": "const",
      "name": "expected_hz",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to isBusy from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn isBusy() bool {\n    return (cmos.readStatusRegister(cmos.StatusRegister.A, false) & 0x80) != 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "isBusy",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to calcDayOfWeek from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn calcDayOfWeek(date_time: DateTime) u32 {\n    const t = [_]u8{ 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "calcDayOfWeek",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to isBcd from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn isBcd() bool {\n    const reg_b = cmos.readStatusRegister(cmos.StatusRegister.B, false);\n    return reg_b & 0x04 != 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "isBcd",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to is12Hr from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn is12Hr(date_time: DateTime) bool {\n    const reg_b = cmos.readStatusRegister(cmos.StatusRegister.B, false);\n    return reg_b & 0x02 != 0 and date_time.hour & 0x80 != 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "is12Hr",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to bcdToBinary from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn bcdToBinary(bcd: u32) u32 {\n    return ((bcd & 0xF0) >> 1) + ((bcd & 0xF0) >> 3) + (bcd & 0xf);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "bcdToBinary",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to readRtcRegisters from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn readRtcRegisters() DateTime {\n    // Make sure there isn't a update in progress\n    while (isBusy()) {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "readRtcRegisters",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rtcHandler from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn rtcHandler(ctx: *arch.CpuState) usize {\n    ticks +%= 1;\n\n    var ret_esp: usize = undefined;\n\n    // Call the scheduler\n    if (schedule) {\n        ret_esp = scheduler.pickNextTask(ctx);\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "rtcHandler",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to setRate from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn setRate(rate: u8) RtcError!void {\n    if (rate < 3 or rate > 0xF) {\n        return RtcError.RateError;\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "setRate",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to enableInterrupts from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn enableInterrupts() void {\n    // Need to disable the NMI for this process\n    const status_b = cmos.readStatusRegister(cmos.StatusRegister.B, true);\n\n    // Set the 7th bit to enable interrupt\n    cmos.writeStatusRegister(cmos.StatusRegister.B, status_b | 0x40, true);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "enableInterrupts",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to getDateTime from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "pub fn getDateTime() DateTime {\n    var date_time1 = readRtcRegisters();\n    var date_time2 = readRtcRegisters();\n\n    // Use the method: Read the registers twice and check if they are the same so to avoid\n    // inconsistent values due to RTC updates\n\n    var compare = false;\n\n    inline for (@typeInfo(DateTime).Struct.fields) |field| {\n        compare = compare or @field(date_time1, field.name) != @field(date_time2, field.name);\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "getDateTime",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_init from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn rt_init() void {\n    var irq_exists = false;\n    irq.registerIrq(pic.IRQ_REAL_TIME_CLOCK, rtcHandler) catch |err| switch (err) {\n        error.IrqExists => {\n            // We should get this error\n            irq_exists = true;\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "rt_init",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to rt_interrupts from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "fn rt_interrupts() void {\n    const prev_ticks = ticks;\n\n    pit.waitTicks(100);\n\n    if (prev_ticks == ticks) {\n        panic(@errorReturnTrace(), \"FAILURE: No interrupt happened\\n\", .{}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "rt_interrupts",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "pub fn runtimeTests() void {\n    rt_init();\n\n    // Disable the scheduler temporary\n    schedule = false;\n    // Interrupts aren't enabled yet, so for the runtime tests, enable it temporary\n    arch.enableInterrupts();\n    rt_interrupts();\n    arch.disableInterrupts();\n    // Can enable it back\n    schedule = true;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig struct similar to DateTime from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "pub const DateTime = struct {\n    second: u32,\n    minute: u32,\n    hour: u32,\n    day: u32,\n    month: u32,\n    year: u32,\n    century: u32,\n    day_of_week: u32,\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "struct",
      "name": "DateTime",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to CURRENT_CENTURY from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "const CURRENT_CENTURY: u32 = 2000;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "const",
      "name": "CURRENT_CENTURY",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to CENTURY_REGISTER from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/rtc.zig",
    "response": "const CENTURY_REGISTER: bool = false;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/rtc.zig",
      "type": "const",
      "name": "CENTURY_REGISTER",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to lcrValue from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "fn lcrValue(char_len: u8, stop_bit: bool, parity_bit: bool, msb: u1) SerialError!u8 {\n    if (char_len != 0 and (char_len < 5 or char_len > 8))\n        return SerialError.InvalidCharacterLength;\n    // Set the msb and OR in all arguments passed\n    const val = char_len & 0x3 |\n        @intCast(u8, @boolToInt(stop_bit)) << 2 |\n        @intCast(u8, @boolToInt(parity_bit)) << 3 |\n        @intCast(u8, msb) << 7;\n    return val;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "function",
      "name": "lcrValue",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to baudDivisor from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "fn baudDivisor(baud: u32) SerialError!u16 {\n    if (baud > BAUD_MAX or baud == 0)\n        return SerialError.InvalidBaudRate;\n    return @truncate(u16, BAUD_MAX / baud);\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "function",
      "name": "baudDivisor",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to transmitIsEmpty from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "fn transmitIsEmpty(port: Port) bool {\n    return arch.in(u8, @enumToInt(port) + 5) & 0x20 > 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "function",
      "name": "transmitIsEmpty",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to write from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "pub fn write(char: u8, port: Port) void {\n    while (!transmitIsEmpty(port)) {\n        arch.halt();\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "function",
      "name": "write",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to init from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "pub fn init(baud: u32, port: Port) SerialError!void {\n    // The baudrate is sent as a divisor of the max baud rate\n    const divisor: u16 = try baudDivisor(baud);\n    const port_int = @enumToInt(port);\n    // Send a byte to start setting the baudrate\n    arch.out(port_int + LCR, lcrValue(0, false, false, 1) catch |e| {\n        panic(@errorReturnTrace(), \"Failed to initialise serial output setup: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "function",
      "name": "init",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to BAUD_MAX from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "const BAUD_MAX: u32 = 115200;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "const",
      "name": "BAUD_MAX",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to CHAR_LEN from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "const CHAR_LEN: u8 = 8;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "const",
      "name": "CHAR_LEN",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to SINGLE_STOP_BIT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "const SINGLE_STOP_BIT: bool = true;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "const",
      "name": "SINGLE_STOP_BIT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to PARITY_BIT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "const PARITY_BIT: bool = false;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "const",
      "name": "PARITY_BIT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to divisor from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/serial.zig",
    "response": "const divisor: u16 = try baudDivisor(baud);",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/serial.zig",
      "type": "const",
      "name": "divisor",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to isValidSyscall from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "pub fn isValidSyscall(syscall: u32) bool {\n    return syscall < NUM_HANDLERS;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "isValidSyscall",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to handle from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn handle(ctx: *arch.CpuState) usize {\n    // The syscall number is put in eax\n    const syscall = ctx.eax;\n    if (isValidSyscall(syscall)) {\n        if (handlers[syscall]) |handler| {\n            const result = handler(ctx, syscallArg(ctx, 0), syscallArg(ctx, 1), syscallArg(ctx, 2), syscallArg(ctx, 3), syscallArg(ctx, 4));\n            if (result) |res| {\n                ctx.eax = res;\n                ctx.ebx = 0;\n            }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "handle",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to registerSyscall from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "pub fn registerSyscall(syscall: usize, handler: Handler) Error!void {\n    if (!isValidSyscall(syscall))\n        return Error.InvalidSyscall;\n    if (handlers[syscall]) |_|\n        return Error.SyscallExists;\n    handlers[syscall] = handler;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "registerSyscall",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to syscall0 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn syscall0(syscall: usize) anyerror!usize {\n    const res = asm volatile (\n        \\\\int $0x80\n        : [ret] \"={eax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "syscall0",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to syscall1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn syscall1(syscall: usize, arg: usize) anyerror!usize {\n    const res = asm volatile (\n        \\\\int $0x80\n        : [ret] \"={eax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "syscall1",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to syscall2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn syscall2(syscall: usize, arg1: usize, arg2: usize) anyerror!usize {\n    const res = asm volatile (\n        \\\\int $0x80\n        : [ret] \"={eax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "syscall2",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to syscall3 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn syscall3(syscall: usize, arg1: usize, arg2: usize, arg3: usize) anyerror!usize {\n    const res = asm volatile (\n        \\\\int $0x80\n        : [ret] \"={eax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "syscall3",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to syscall4 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn syscall4(syscall: usize, arg1: usize, arg2: usize, arg3: usize, arg4: usize) anyerror!usize {\n    const res = asm volatile (\n        \\\\int $0x80\n        : [ret] \"={eax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "syscall4",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to syscall5 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn syscall5(syscall: usize, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n    const res = asm volatile (\n        \\\\int $0x80\n        : [ret] \"={eax}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "syscall5",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig function similar to syscallArg from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn syscallArg(ctx: *const arch.CpuState, comptime arg_idx: u32) usize {\n    return switch (arg_idx) {\n        0 => ctx.ebx,\n        1 => ctx.ecx,\n        2 => ctx.edx,\n        3 => ctx.esi,\n        4 => ctx.edi,\n        else => @compileError(\"Arg index must be between 0 and 4\"),\n    }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "syscallArg",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to makeHandler from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn makeHandler(comptime syscall: syscalls.Syscall) Handler {\n    return struct {\n        fn func(ctx: *const arch.CpuState, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n            return syscalls.handle(syscall, ctx, arg1, arg2, arg3, arg4, arg5);\n        }",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "makeHandler",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to testHandler0 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn testHandler0(ctx: *const arch.CpuState, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n    // Suppress unused variable warnings\n    _ = ctx;\n    _ = arg1;\n    _ = arg2;\n    _ = arg3;\n    _ = arg4;\n    _ = arg5;\n    test_int += 1;\n    return 0;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "testHandler0",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to testHandler1 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn testHandler1(ctx: *const arch.CpuState, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n    // Suppress unused variable warnings\n    _ = ctx;\n    _ = arg2;\n    _ = arg3;\n    _ = arg4;\n    _ = arg5;\n    test_int += arg1;\n    return 1;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "testHandler1",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to testHandler2 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn testHandler2(ctx: *const arch.CpuState, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n    // Suppress unused variable warnings\n    _ = ctx;\n    _ = arg3;\n    _ = arg4;\n    _ = arg5;\n    test_int += arg1 + arg2;\n    return 2;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "testHandler2",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to testHandler3 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn testHandler3(ctx: *const arch.CpuState, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n    // Suppress unused variable warnings\n    _ = ctx;\n    _ = arg4;\n    _ = arg5;\n    test_int += arg1 + arg2 + arg3;\n    return 3;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "testHandler3",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to testHandler4 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn testHandler4(ctx: *const arch.CpuState, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n    // Suppress unused variable warnings\n    _ = ctx;\n    _ = arg5;\n    test_int += arg1 + arg2 + arg3 + arg4;\n    return 4;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "testHandler4",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to testHandler5 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn testHandler5(ctx: *const arch.CpuState, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n    _ = ctx;\n    test_int += arg1 + arg2 + arg3 + arg4 + arg5;\n    return 5;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "testHandler5",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to testHandler6 from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn testHandler6(ctx: *const arch.CpuState, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) anyerror!usize {\n    // Suppress unused variable warnings\n    _ = ctx;\n    _ = arg1;\n    _ = arg2;\n    _ = arg3;\n    _ = arg4;\n    _ = arg5;\n    return error.OutOfMemory;\n}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "testHandler6",
      "difficulty": "medium"
    }
  },
  {
    "instruction": "Write a Zig function similar to runtimeTests from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "fn runtimeTests() void {\n    registerSyscall(121, testHandler6) catch |e| panic(@errorReturnTrace(), \"FAILURE registering handler 6: {}",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "function",
      "name": "runtimeTests",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to INTERRUPT from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "pub const INTERRUPT: u16 = 0x80;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "const",
      "name": "INTERRUPT",
      "difficulty": "easy"
    }
  },
  {
    "instruction": "Write a Zig const similar to NUM_HANDLERS from ZystemOS/pluto",
    "context": "Repository: ZystemOS/pluto (692 ⭐)\nFile: src/kernel/arch/x86/syscalls.zig",
    "response": "pub const NUM_HANDLERS: u16 = 256;",
    "metadata": {
      "repo": "ZystemOS/pluto",
      "stars": 692,
      "file": "src/kernel/arch/x86/syscalls.zig",
      "type": "const",
      "name": "NUM_HANDLERS",
      "difficulty": "easy"
    }
  }
]